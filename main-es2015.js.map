{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/countries/countries.component.ts","./src/app/components/countries/countries.component.html","./src/app/components/dashboard-card/dashboard-card.component.ts","./src/app/components/dashboard-card/dashboard-card.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/services/data-service.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { CountriesComponent } from './components/countries/countries.component';\n\n\nconst routes: Routes = [\n  {path : '' , component : HomeComponent},\n  {path : 'countries' , component :CountriesComponent } \n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'covid19-tracker';\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { CountriesComponent } from './components/countries/countries.component';\nimport {HttpClientModule}  from '@angular/common/http';\nimport { DashboardCardComponent } from './components/dashboard-card/dashboard-card.component'\nimport { GoogleChartsModule } from 'angular-google-charts';\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    CountriesComponent,\n    DashboardCardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule, \n    HttpClientModule, \n    GoogleChartsModule\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { DataServiceService } from 'src/app/services/data-service.service';\nimport { GlobalDataSummary } from 'src/app/models/gloabl-data';\nimport { DateWiseData } from 'src/app/models/date-wise-data';\nimport { merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-countries',\n  templateUrl: './countries.component.html',\n  styleUrls: ['./countries.component.css']\n})\nexport class CountriesComponent implements OnInit {\n\n  data : GlobalDataSummary[];\n  countries : string[] = [];\n  totalConfirmed = 0;\n  totalActive = 0;\n  totalDeaths = 0;\n  totalRecovered = 0;\n  selectedCountryData : DateWiseData[]; \n  dateWiseData ;\n  loading = true;\n  options: {\n    height : 500, \n    animation:{\n      duration: 1000,\n      easing: 'out',\n    },\n  }\n \n  constructor(private service : DataServiceService) { }\n\n  ngOnInit(): void {\n\n    merge(\n      this.service.getDateWiseData().pipe(\n        map(result=>{\n          this.dateWiseData = result;\n        })\n      ), \n      this.service.getGlobalData().pipe(map(result=>{\n        this.data = result;\n        this.data.forEach(cs=>{\n          this.countries.push(cs.country)\n        })\n      }))\n    ).subscribe(\n      {\n        complete : ()=>{\n         this.updateValues('India')\n         this.loading = false;\n        }\n      }\n    )\n    \n    \n\n  }\n\n  updateChart(){\n    let dataTable = [];\n    dataTable.push([\"Date\" , 'Cases'])\n    this.selectedCountryData.forEach(cs=>{\n      dataTable.push([cs.date , cs.cases])\n    })\n\n   \n  }\n\n  updateValues(country : string){\n    console.log(country);\n    this.data.forEach(cs=>{\n      if(cs.country == country){\n        this.totalActive = cs.active\n        this.totalDeaths = cs.deaths\n        this.totalRecovered = cs.recovered\n        this.totalConfirmed = cs.confirmed\n      }\n    })\n\n    this.selectedCountryData  = this.dateWiseData[country]\n    // console.log(this.selectedCountryData);\n    this.updateChart();\n    \n  }\n\n}\n","<div class=\"ui inverted dimmer\" [class.active]='loading'>\n    <div class=\"ui text loader\">Loading</div>\n</div>\n\n<div class=\"jumbotron bg-white text-center p-0 m-0 \">\n    <h1 class=\"display-4\">Corona Covid-19 Tracker Country Wise</h1>\n    <hr>\n\n    <div class=\"mx-auto\">\n        <div class=\"form-group col-lg-5 mx-auto\">\n            <label for=\"c\">Select Country</label>\n            <select name=\"\" class=\"form-control\" id=\"c\" #input (change)='updateValues(input.value)'>\n                <option value=\"{{con}}\" *ngFor='let con of countries'>{{con}}</option>\n            </select>\n        </div>\n    </div>\n    <app-dashboard-card [totalConfirmed]='totalConfirmed' [totalActive]='totalActive' [totalRecovered]='totalRecovered' [totalDeaths]='totalDeaths'></app-dashboard-card>\n\n\n    <div class=\"row\">\n\n        <div class=\"col\">\n\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                        <th>Sno.</th>\n                        <th>Date</th>\n                        <th>Cases</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    <tr *ngFor='let cs of selectedCountryData; index as i '>\n                        <td>{{i+1}}</td>\n                        <td>{{cs.date | date}}</td>\n                        <td>{{cs.cases}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class=\"col\">\n            <google-chart></google-chart>\n        </div>\n\n\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard-card',\n  templateUrl: './dashboard-card.component.html',\n  styleUrls: ['./dashboard-card.component.css']\n})\nexport class DashboardCardComponent implements OnInit {\n\n  @Input('totalConfirmed')\n  totalConfirmed;\n  @Input('totalDeaths')\n  totalDeaths;\n  @Input('totalActive')\n  totalActive;\n  @Input('totalRecovered')\n  totalRecovered;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"card col p-3 m-3\">\n        <div class=\"ui statistic\">\n            <div class=\"label\">\n                <h3>Confirmed</h3>\n            </div>\n            <div class=\"value\">\n                {{totalConfirmed}}\n            </div>\n        </div>\n    </div>\n    <div class=\"card col p-3 m-3\">\n        <div class=\"ui statistic\">\n            <div class=\"label\">\n                <h3>Recovered</h3>\n            </div>\n            <div class=\"value\">\n                {{totalRecovered}}\n            </div>\n        </div>\n    </div>\n    <div class=\"card col p-3 m-3\">\n        <div class=\"ui statistic\">\n            <div class=\"label\">\n                <h3>Deaths</h3>\n            </div>\n            <div class=\"value\">\n                {{totalDeaths}}\n            </div>\n        </div>\n    </div>\n    <div class=\"card col p-3 m-3\">\n        <div class=\"ui statistic\">\n            <div class=\"label\">\n                <h3>Active</h3>\n            </div>\n            <div class=\"value\">\n                {{totalActive}}\n            </div>\n        </div>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DataServiceService } from 'src/app/services/data-service.service';\nimport { GlobalDataSummary } from 'src/app/models/gloabl-data';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  totalConfirmed = 0;\n  totalActive = 0;\n  totalDeaths = 0;\n  totalRecovered = 0;\n  loading = true;\n  globalData: GlobalDataSummary[];\n  datatable = [];\n  chart = {\n    PieChart : \"PieChart\" ,\n    ColumnChart : 'ColumnChart' ,\n    LineChart : \"LineChart\", \n    height: 500, \n    options: {\n      animation:{\n        duration: 1000,\n        easing: 'out',\n      },\n      is3D: true\n    }  \n  }\n  \n  \n  constructor(private dataService: DataServiceService) { }\n\n\n  \n  ngOnInit(): void {\n\n    this.dataService.getGlobalData()\n      .subscribe(\n        {\n          next: (result) => {\n            console.log(result);\n            this.globalData = result;\n            result.forEach(cs => {\n              if (!Number.isNaN(cs.confirmed)) {\n                this.totalActive += cs.active\n                this.totalConfirmed += cs.confirmed\n                this.totalDeaths += cs.deaths\n                this.totalRecovered += cs.active\n              }\n\n            })\n\n            this.initChart('c');\n          }, \n          complete : ()=>{\n            this.loading = false;\n          }\n        }\n      )\n  }\n\n\n\n  updateChart(input: HTMLInputElement) {\n    console.log(input.value);\n    this.initChart(input.value)\n  }\n\n  initChart(caseType: string) {\n\n    this.datatable = [];\n    // this.datatable.push([\"Country\", \"Cases\"])\n    \n    this.globalData.forEach(cs => {\n      let value :number ;\n      if (caseType == 'c')\n        if (cs.confirmed > 2000)\n          value = cs.confirmed\n          \n      if (caseType == 'a')\n        if (cs.active > 2000)\n          value = cs.active\n      if (caseType == 'd')\n        if (cs.deaths > 1000)\n          value = cs.deaths\n          \n      if (caseType == 'r')\n        if (cs.recovered > 2000)\n            value = cs.recovered\n        \n\n        this.datatable.push([\n            cs.country, value\n          ])\n    })\n    console.log(this.datatable);\n\n  }\n\n}\n","<div class=\"ui inverted dimmer\" [class.active]='loading'>\n    <div class=\"ui text loader\">Loading</div>\n</div>\n\n<div class=\"jumbotron bg-white text-center p-0 m-0\">\n    <h1 class=\"display-4\"> Covid-19 Tracker App</h1>\n    <hr>\n\n    <app-dashboard-card [totalConfirmed]='totalConfirmed' [totalActive]='totalActive' [totalRecovered]='totalRecovered' [totalDeaths]='totalDeaths'></app-dashboard-card>\n\n</div>\n\n<hr>\n<div class=\"ui form\">\n    <div class=\"inline fields\">\n        <label for=\"fruit\">Select Case Type : </label>\n        <div class=\"field\">\n            <div class=\"ui radio checkbox\">\n                <input type=\"radio\" id='c' #c (click)='updateChart(c)' value=\"c\" name=\"casetype\" checked=\"\" tabindex=\"0\" class=\"hidden\">\n                <label for='c'>Confirmed</label>\n            </div>\n        </div>\n        <div class=\"field\">\n            <div class=\"ui radio checkbox\">\n                <input type=\"radio\" value='d' #d (click)='updateChart(d)' id='d' name=\"casetype\" tabindex=\"0\" class=\"hidden\">\n                <label for='d'>Deaths</label>\n            </div>\n        </div>\n        <div class=\"field\">\n            <div class=\"ui radio checkbox\">\n                <input type=\"radio\" value='r' #r (click)='updateChart(r)' id='r' name=\"casetype\" tabindex=\"0\" class=\"hidden\">\n                <label for='r'>Recovered</label>\n            </div>\n        </div>\n        <div class=\"field\">\n            <div class=\"ui radio checkbox\">\n                <input id='a' #a type=\"radio\" (click)='updateChart(a)' value='a' name=\"casetype\" tabindex=\"0\" class=\"hidden\">\n                <label for='a'>Active</label>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col\">\n            <google-chart [type]='chart.PieChart' [options]='chart.options' style=\"width: 100%;\" [height]='chart.height' [data]='datatable'></google-chart>\n        </div>\n        <div class=\"col\">\n            <google-chart [type]='chart.ColumnChart' style=\"width: 100%;\" [options]='chart.options' [height]='chart.height' [data]='datatable'></google-chart>\n        </div>\n        <!-- \n        <div class=\"col\">\n            <google-chart [type]='chart.LineChart' style=\"width: 100%;\" [options]='chart.options' [height]='chart.height' [data]='datatable'></google-chart>\n        </div> -->\n    </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <a class=\"navbar-brand\" routerLink='/'>Covid-19 Tracker</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul class=\"navbar-nav\">\n            <li class=\"nav-item active\">\n                <a class=\"nav-link\" routerLink='/'>Home <span class=\"sr-only\">(current)</span></a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink='countries'>Countries</a>\n            </li>\n\n        </ul>\n    </div>\n</nav>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators'\nimport { GlobalDataSummary } from '../models/gloabl-data';\nimport { DateWiseData } from '../models/date-wise-data';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataServiceService {\n\n  private globalDataUrl = `https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/04-17-2020.csv`;\n  private dateWiseDataUrl = `https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv`\n  constructor(private http: HttpClient) { }\n\n  getDateWiseData() {\n    return this.http.get(this.dateWiseDataUrl, { responseType: 'text' })\n      .pipe(map(result => {\n        let rows = result.split('\\n');\n        // console.log(rows);\n        let mainData = {};\n        let header = rows[0];\n        let dates = header.split(/,(?=\\S)/)\n        dates.splice(0 , 4);\n        rows.splice(0 , 1);\n        rows.forEach(row=>{\n          let cols = row.split(/,(?=\\S)/)\n          let con = cols[1];\n          cols.splice(0 , 4);\n          // console.log(con , cols);\n          mainData[con] = [];\n          cols.forEach((value , index)=>{\n            let dw : DateWiseData = {\n              cases : +value ,\n              country : con , \n              date : new Date(Date.parse(dates[index])) \n\n            }\n            mainData[con].push(dw)\n          })\n          \n        })\n\n\n        // console.log(mainData);\n        return mainData;\n      }))\n  }\n\n  getGlobalData() {\n    return this.http.get(this.globalDataUrl, { responseType: 'text' }).pipe(\n      map(result => {\n        let data: GlobalDataSummary[] = [];\n        let raw = {}\n        let rows = result.split('\\n');\n        rows.splice(0, 1);\n        // console.log(rows);\n        rows.forEach(row => {\n          let cols = row.split(/,(?=\\S)/)\n\n          let cs = {\n            country: cols[3],\n            confirmed: +cols[7],\n            deaths: +cols[8],\n            recovered: +cols[9],\n            active: +cols[10],\n          };\n          let temp: GlobalDataSummary = raw[cs.country];\n          if (temp) {\n            temp.active = cs.active + temp.active\n            temp.confirmed = cs.confirmed + temp.confirmed\n            temp.deaths = cs.deaths + temp.deaths\n            temp.recovered = cs.recovered + temp.recovered\n\n            raw[cs.country] = temp;\n          } else {\n            raw[cs.country] = cs;\n          }\n        })\n        return <GlobalDataSummary[]>Object.values(raw);\n      })\n    )\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}