{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/countries/countries.component.ts","webpack:///src/app/components/countries/countries.component.html","webpack:///src/app/components/dashboard-card/dashboard-card.component.ts","webpack:///src/app/components/dashboard-card/dashboard-card.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/services/data-service.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CountriesComponent","service","countries","totalConfirmed","totalActive","totalDeaths","totalRecovered","loading","getDateWiseData","pipe","result","dateWiseData","getGlobalData","data","forEach","cs","push","country","subscribe","complete","updateValues","dataTable","selectedCountryData","date","cases","console","log","active","deaths","recovered","confirmed","updateChart","DashboardCardComponent","HomeComponent","dataService","datatable","chart","PieChart","ColumnChart","LineChart","height","options","animation","duration","easing","is3D","next","globalData","Number","isNaN","initChart","input","value","caseType","NavbarComponent","DataServiceService","http","globalDataUrl","dateWiseDataUrl","get","responseType","rows","split","mainData","header","dates","splice","row","cols","con","index","dw","Date","parse","raw","temp","Object","values","providedIn","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { CountriesComponent } from './components/countries/countries.component';\n\n\nconst routes: Routes = [\n  {path : '' , component : HomeComponent},\n  {path : 'countries' , component :CountriesComponent } \n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'covid19-tracker';\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { CountriesComponent } from './components/countries/countries.component';\nimport {HttpClientModule}  from '@angular/common/http';\nimport { DashboardCardComponent } from './components/dashboard-card/dashboard-card.component'\nimport { GoogleChartsModule } from 'angular-google-charts';\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    CountriesComponent,\n    DashboardCardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule, \n    HttpClientModule, \n    GoogleChartsModule\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { DataServiceService } from 'src/app/services/data-service.service';\nimport { GlobalDataSummary } from 'src/app/models/gloabl-data';\nimport { DateWiseData } from 'src/app/models/date-wise-data';\nimport { merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-countries',\n  templateUrl: './countries.component.html',\n  styleUrls: ['./countries.component.css']\n})\nexport class CountriesComponent implements OnInit {\n\n  data : GlobalDataSummary[];\n  countries : string[] = [];\n  totalConfirmed = 0;\n  totalActive = 0;\n  totalDeaths = 0;\n  totalRecovered = 0;\n  selectedCountryData : DateWiseData[]; \n  dateWiseData ;\n  loading = true;\n  options: {\n    height : 500, \n    animation:{\n      duration: 1000,\n      easing: 'out',\n    },\n  }\n \n  constructor(private service : DataServiceService) { }\n\n  ngOnInit(): void {\n\n    merge(\n      this.service.getDateWiseData().pipe(\n        map(result=>{\n          this.dateWiseData = result;\n        })\n      ), \n      this.service.getGlobalData().pipe(map(result=>{\n        this.data = result;\n        this.data.forEach(cs=>{\n          this.countries.push(cs.country)\n        })\n      }))\n    ).subscribe(\n      {\n        complete : ()=>{\n         this.updateValues('India')\n         this.loading = false;\n        }\n      }\n    )\n    \n    \n\n  }\n\n  updateChart(){\n    let dataTable = [];\n    dataTable.push([\"Date\" , 'Cases'])\n    this.selectedCountryData.forEach(cs=>{\n      dataTable.push([cs.date , cs.cases])\n    })\n\n   \n  }\n\n  updateValues(country : string){\n    console.log(country);\n    this.data.forEach(cs=>{\n      if(cs.country == country){\n        this.totalActive = cs.active\n        this.totalDeaths = cs.deaths\n        this.totalRecovered = cs.recovered\n        this.totalConfirmed = cs.confirmed\n      }\n    })\n\n    this.selectedCountryData  = this.dateWiseData[country]\n    // console.log(this.selectedCountryData);\n    this.updateChart();\n    \n  }\n\n}\n","<div class=\"ui inverted dimmer\" [class.active]='loading'>\n    <div class=\"ui text loader\">Loading</div>\n</div>\n\n<div class=\"jumbotron bg-white text-center p-0 m-0 \">\n    <h1 class=\"display-4\">Corona Covid-19 Tracker Country Wise</h1>\n    <hr>\n\n    <div class=\"mx-auto\">\n        <div class=\"form-group col-lg-5 mx-auto\">\n            <label for=\"c\">Select Country</label>\n            <select name=\"\" class=\"form-control\" id=\"c\" #input (change)='updateValues(input.value)'>\n                <option value=\"{{con}}\" *ngFor='let con of countries'>{{con}}</option>\n            </select>\n        </div>\n    </div>\n    <app-dashboard-card [totalConfirmed]='totalConfirmed' [totalActive]='totalActive' [totalRecovered]='totalRecovered' [totalDeaths]='totalDeaths'></app-dashboard-card>\n\n\n    <div class=\"row\">\n\n        <div class=\"col\">\n\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                        <th>Sno.</th>\n                        <th>Date</th>\n                        <th>Cases</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    <tr *ngFor='let cs of selectedCountryData; index as i '>\n                        <td>{{i+1}}</td>\n                        <td>{{cs.date | date}}</td>\n                        <td>{{cs.cases}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class=\"col\">\n            <google-chart></google-chart>\n        </div>\n\n\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard-card',\n  templateUrl: './dashboard-card.component.html',\n  styleUrls: ['./dashboard-card.component.css']\n})\nexport class DashboardCardComponent implements OnInit {\n\n  @Input('totalConfirmed')\n  totalConfirmed;\n  @Input('totalDeaths')\n  totalDeaths;\n  @Input('totalActive')\n  totalActive;\n  @Input('totalRecovered')\n  totalRecovered;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"card col p-3 m-3\">\n        <div class=\"ui statistic\">\n            <div class=\"label\">\n                <h3>Confirmed</h3>\n            </div>\n            <div class=\"value\">\n                {{totalConfirmed}}\n            </div>\n        </div>\n    </div>\n    <div class=\"card col p-3 m-3\">\n        <div class=\"ui statistic\">\n            <div class=\"label\">\n                <h3>Recovered</h3>\n            </div>\n            <div class=\"value\">\n                {{totalRecovered}}\n            </div>\n        </div>\n    </div>\n    <div class=\"card col p-3 m-3\">\n        <div class=\"ui statistic\">\n            <div class=\"label\">\n                <h3>Deaths</h3>\n            </div>\n            <div class=\"value\">\n                {{totalDeaths}}\n            </div>\n        </div>\n    </div>\n    <div class=\"card col p-3 m-3\">\n        <div class=\"ui statistic\">\n            <div class=\"label\">\n                <h3>Active</h3>\n            </div>\n            <div class=\"value\">\n                {{totalActive}}\n            </div>\n        </div>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DataServiceService } from 'src/app/services/data-service.service';\nimport { GlobalDataSummary } from 'src/app/models/gloabl-data';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  totalConfirmed = 0;\n  totalActive = 0;\n  totalDeaths = 0;\n  totalRecovered = 0;\n  loading = true;\n  globalData: GlobalDataSummary[];\n  datatable = [];\n  chart = {\n    PieChart : \"PieChart\" ,\n    ColumnChart : 'ColumnChart' ,\n    LineChart : \"LineChart\", \n    height: 500, \n    options: {\n      animation:{\n        duration: 1000,\n        easing: 'out',\n      },\n      is3D: true\n    }  \n  }\n  \n  \n  constructor(private dataService: DataServiceService) { }\n\n\n  \n  ngOnInit(): void {\n\n    this.dataService.getGlobalData()\n      .subscribe(\n        {\n          next: (result) => {\n            console.log(result);\n            this.globalData = result;\n            result.forEach(cs => {\n              if (!Number.isNaN(cs.confirmed)) {\n                this.totalActive += cs.active\n                this.totalConfirmed += cs.confirmed\n                this.totalDeaths += cs.deaths\n                this.totalRecovered += cs.active\n              }\n\n            })\n\n            this.initChart('c');\n          }, \n          complete : ()=>{\n            this.loading = false;\n          }\n        }\n      )\n  }\n\n\n\n  updateChart(input: HTMLInputElement) {\n    console.log(input.value);\n    this.initChart(input.value)\n  }\n\n  initChart(caseType: string) {\n\n    this.datatable = [];\n    // this.datatable.push([\"Country\", \"Cases\"])\n    \n    this.globalData.forEach(cs => {\n      let value :number ;\n      if (caseType == 'c')\n        if (cs.confirmed > 2000)\n          value = cs.confirmed\n          \n      if (caseType == 'a')\n        if (cs.active > 2000)\n          value = cs.active\n      if (caseType == 'd')\n        if (cs.deaths > 1000)\n          value = cs.deaths\n          \n      if (caseType == 'r')\n        if (cs.recovered > 2000)\n            value = cs.recovered\n        \n\n        this.datatable.push([\n            cs.country, value\n          ])\n    })\n    console.log(this.datatable);\n\n  }\n\n}\n","<div class=\"ui inverted dimmer\" [class.active]='loading'>\n    <div class=\"ui text loader\">Loading</div>\n</div>\n\n<div class=\"jumbotron bg-white text-center p-0 m-0\">\n    <h1 class=\"display-4\"> Covid-19 Tracker App</h1>\n    <hr>\n\n    <app-dashboard-card [totalConfirmed]='totalConfirmed' [totalActive]='totalActive' [totalRecovered]='totalRecovered' [totalDeaths]='totalDeaths'></app-dashboard-card>\n\n</div>\n\n<hr>\n<div class=\"ui form\">\n    <div class=\"inline fields\">\n        <label for=\"fruit\">Select Case Type : </label>\n        <div class=\"field\">\n            <div class=\"ui radio checkbox\">\n                <input type=\"radio\" id='c' #c (click)='updateChart(c)' value=\"c\" name=\"casetype\" checked=\"\" tabindex=\"0\" class=\"hidden\">\n                <label for='c'>Confirmed</label>\n            </div>\n        </div>\n        <div class=\"field\">\n            <div class=\"ui radio checkbox\">\n                <input type=\"radio\" value='d' #d (click)='updateChart(d)' id='d' name=\"casetype\" tabindex=\"0\" class=\"hidden\">\n                <label for='d'>Deaths</label>\n            </div>\n        </div>\n        <div class=\"field\">\n            <div class=\"ui radio checkbox\">\n                <input type=\"radio\" value='r' #r (click)='updateChart(r)' id='r' name=\"casetype\" tabindex=\"0\" class=\"hidden\">\n                <label for='r'>Recovered</label>\n            </div>\n        </div>\n        <div class=\"field\">\n            <div class=\"ui radio checkbox\">\n                <input id='a' #a type=\"radio\" (click)='updateChart(a)' value='a' name=\"casetype\" tabindex=\"0\" class=\"hidden\">\n                <label for='a'>Active</label>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col\">\n            <google-chart [type]='chart.PieChart' [options]='chart.options' style=\"width: 100%;\" [height]='chart.height' [data]='datatable'></google-chart>\n        </div>\n        <div class=\"col\">\n            <google-chart [type]='chart.ColumnChart' style=\"width: 100%;\" [options]='chart.options' [height]='chart.height' [data]='datatable'></google-chart>\n        </div>\n        <!-- \n        <div class=\"col\">\n            <google-chart [type]='chart.LineChart' style=\"width: 100%;\" [options]='chart.options' [height]='chart.height' [data]='datatable'></google-chart>\n        </div> -->\n    </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <a class=\"navbar-brand\" routerLink='/'>Covid-19 Tracker</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul class=\"navbar-nav\">\n            <li class=\"nav-item active\">\n                <a class=\"nav-link\" routerLink='/'>Home <span class=\"sr-only\">(current)</span></a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink='countries'>Countries</a>\n            </li>\n\n        </ul>\n    </div>\n</nav>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators'\nimport { GlobalDataSummary } from '../models/gloabl-data';\nimport { DateWiseData } from '../models/date-wise-data';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataServiceService {\n\n  private globalDataUrl = `https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/04-17-2020.csv`;\n  private dateWiseDataUrl = `https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv`\n  constructor(private http: HttpClient) { }\n\n  getDateWiseData() {\n    return this.http.get(this.dateWiseDataUrl, { responseType: 'text' })\n      .pipe(map(result => {\n        let rows = result.split('\\n');\n        // console.log(rows);\n        let mainData = {};\n        let header = rows[0];\n        let dates = header.split(/,(?=\\S)/)\n        dates.splice(0 , 4);\n        rows.splice(0 , 1);\n        rows.forEach(row=>{\n          let cols = row.split(/,(?=\\S)/)\n          let con = cols[1];\n          cols.splice(0 , 4);\n          // console.log(con , cols);\n          mainData[con] = [];\n          cols.forEach((value , index)=>{\n            let dw : DateWiseData = {\n              cases : +value ,\n              country : con , \n              date : new Date(Date.parse(dates[index])) \n\n            }\n            mainData[con].push(dw)\n          })\n          \n        })\n\n\n        // console.log(mainData);\n        return mainData;\n      }))\n  }\n\n  getGlobalData() {\n    return this.http.get(this.globalDataUrl, { responseType: 'text' }).pipe(\n      map(result => {\n        let data: GlobalDataSummary[] = [];\n        let raw = {}\n        let rows = result.split('\\n');\n        rows.splice(0, 1);\n        // console.log(rows);\n        rows.forEach(row => {\n          let cols = row.split(/,(?=\\S)/)\n\n          let cs = {\n            country: cols[3],\n            confirmed: +cols[7],\n            deaths: +cols[8],\n            recovered: +cols[9],\n            active: +cols[10],\n          };\n          let temp: GlobalDataSummary = raw[cs.country];\n          if (temp) {\n            temp.active = cs.active + temp.active\n            temp.confirmed = cs.confirmed + temp.confirmed\n            temp.deaths = cs.deaths + temp.deaths\n            temp.recovered = cs.recovered + temp.recovered\n\n            raw[cs.country] = temp;\n          } else {\n            raw[cs.country] = cs;\n          }\n        })\n        return <GlobalDataSummary[]>Object.values(raw);\n      })\n    )\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}